services:
  frontend:
    build: ./frontend
    container_name: secondbrain-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    depends_on:
      - backend

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: secondbrain-backend
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app  # Mount the whole backend folder
      - /app/node_modules  # Exclude node_modules
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=brainley
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    container_name: secondbrain-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=brainley
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d brainley"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: